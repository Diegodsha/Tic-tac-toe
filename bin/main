#!/usr/bin/env ruby
require_relative "../lib/game_logic"
# introduction
puts 'TIC-TAC-TOE'
puts "\nWELCOME TO THIS VERY ADDICTIVE AND FUN GAME"
puts "\nMake shure you have a friend to play with or if you're alone or got no friends it's okay...
don't cry...... JUST PLAY AND HAVE FUN!"

# player one name and select mark-----------------
puts "\nPlayer 1, enter your name :"
player_one = gets.chomp.upcase

puts 'Please choose between X or O'
mark_one = gets.chomp.upcase

until %w[X O].include?(mark_one)
  puts 'Hey! remember is either X or O'
  mark_one = gets.chomp.upcase
  if mark_one != 'X' && mark_one != 'O'
    puts "\nOk I\'ll make it easier for you, just use #{%w[X O].sample} :)"
    mark_one = 'X'
  end
end

# player two name and default mark
mark_two = mark_one == 'X' ? 'O' : 'X'

puts "\nPlayer two, enter your name :"
player_two = gets.chomp.upcase

puts "\n#{player_one} your mark will be #{mark_one}, #{player_two} your mark will be #{mark_two}"

# start the game with an option to reset the game
puts "\nLet's get ready to rumbleeeee!".upcase

game = TicTacToe.new(player_one, player_two, mark_one, mark_two)

puts "\n#{game.current_player} starts the game"

game_start = true

while game_start == true 

  game.show_board

  puts "#{game.current_player} make your move between 1..9 "

  move = gets.strip.to_i - 1


  until move.between?(0, 9) and !game.spot_taken?(move)
    puts "Remember it's between 1..9"
    move = gets.strip.to_i - 1
  end

  # make current player move on board
  game.moves(move)
  # game.player_moves(move)
  #--------------------------------------------------------------------------

  if game.draw? && game.game_finish
    puts "Wooo you are genius the Game is a DRAW"
    game_start = false
    game.show_board
  elsif !game.draw? && game.game_finish
    puts "Congratulatons Big-Brain #{game.current_player} you WON!!!!"
    game_start = false
    game.show_board
  elsif !game.game_finish
    game.player_switch
    game.mark_switch
  end
  # check if game is a tie or end
  # if game end show noard and winner message
  # if game tie show board and tie message
  #-----------------------------------------------------------------------------

  # if not change player


  # if current_player == player_one
  #   current_player = player_two
  # elsif current_player == player_two
  #   current_player = player_one
  # end
  #-----------------------------------------------------------------------------
  # option to play again
  # reset the game if Y

end
